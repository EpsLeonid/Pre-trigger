(edif test (edifVersion 2 0 0) (edifLevel 0) (keywordMap (keywordLevel 0))
(status (written (timeStamp 2017 10 6 15 43 40)
   (author "Xilinx, Inc.")
   (program "Xilinx CORE Generator" (version "Xilinx CORE Generator 6.1i"))))
   (comment "                                                                                
      (c) Copyright 1995 - 2010 Xilinx, Inc. All rights reserved.               
                                                                                
      This file contains confidential and proprietary information               
      of Xilinx, Inc. and is protected under U.S. and                           
      international copyright and other intellectual property                   
      laws.                                                                     
                                                                                
      DISCLAIMER                                                                
      This disclaimer is not a license and does not grant any                   
      rights to the materials distributed herewith. Except as                   
      otherwise provided in a valid license issued to you by                    
      Xilinx, and to the maximum extent permitted by applicable                 
      law: (1) THESE MATERIALS ARE MADE AVAILABLE 'AS IS' AND                   
      WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES               
      AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING                 
      BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-                    
      INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and                  
      (2) Xilinx shall not be liable (whether in contract or tort,              
      including negligence, or under any other theory of                        
      liability) for any loss or damage of any kind or nature                   
      related to, arising under or in connection with these                     
      materials, including for any direct, or any indirect,                     
      special, incidental, or consequential loss or damage                      
      (including loss of data, profits, goodwill, or any type of                
      loss or damage suffered as a result of any action brought                 
      by a third party) even if such damage or loss was                         
      reasonably foreseeable or Xilinx had been advised of the                  
      possibility of the same.                                                  
                                                                                
      CRITICAL APPLICATIONS                                                     
      Xilinx products are not designed or intended to be fail-                  
      safe, or for use in any application requiring fail-safe                   
      performance, such as life-support or safety devices or                    
      systems, Class III medical devices, nuclear facilities,                   
      applications related to the deployment of airbags, or any                 
      other applications that could lead to death, personal                     
      injury, or severe property or environmental damage                        
      (individually and collectively, 'Critical                                 
      Applications'). Customer assumes the sole risk and                        
      liability of any use of Xilinx products in Critical                       
      Applications, subject only to applicable laws and                         
      regulations governing limitations on product liability.                   
                                                                                
      THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS                  
      PART OF THIS FILE AT ALL TIMES.                                           
                                                                                
   ")
   (comment "Core parameters: ")
       (comment "c_has_int_clk = 0 ")
       (comment "c_wr_response_latency = 1 ")
       (comment "c_rd_freq = 1 ")
       (comment "c_has_srst = 1 ")
       (comment "c_enable_rst_sync = 1 ")
       (comment "c_has_rd_data_count = 0 ")
       (comment "c_din_width = 36 ")
       (comment "c_has_wr_data_count = 0 ")
       (comment "c_full_flags_rst_val = 1 ")
       (comment "InstanceName = system_soft_temac_wrapper_fifo_generator_v6_1 ")
       (comment "c_implementation_type = 0 ")
       (comment "c_family = spartan6 ")
       (comment "c_use_embedded_reg = 0 ")
       (comment "c_has_wr_rst = 0 ")
       (comment "c_wr_freq = 1 ")
       (comment "c_use_dout_rst = 1 ")
       (comment "c_underflow_low = 0 ")
       (comment "c_has_meminit_file = 0 ")
       (comment "c_has_overflow = 0 ")
       (comment "c_preload_latency = 0 ")
       (comment "c_dout_width = 36 ")
       (comment "c_msgon_val = 1 ")
       (comment "c_rd_depth = 32 ")
       (comment "c_default_value = BlankString ")
       (comment "c_mif_file_name = BlankString ")
       (comment "c_error_injection_type = 0 ")
       (comment "c_has_underflow = 0 ")
       (comment "c_has_rd_rst = 0 ")
       (comment "c_has_almost_full = 1 ")
       (comment "c_has_rst = 0 ")
       (comment "c_data_count_width = 6 ")
       (comment "c_has_wr_ack = 0 ")
       (comment "c_use_ecc = 0 ")
       (comment "c_wr_ack_low = 0 ")
       (comment "c_common_clock = 1 ")
       (comment "c_rd_pntr_width = 5 ")
       (comment "c_use_fwft_data_count = 1 ")
       (comment "c_has_almost_empty = 0 ")
       (comment "c_rd_data_count_width = 6 ")
       (comment "c_enable_rlocs = 0 ")
       (comment "c_wr_pntr_width = 5 ")
       (comment "c_overflow_low = 0 ")
       (comment "c_prog_empty_type = 0 ")
       (comment "c_optimization_mode = 0 ")
       (comment "c_wr_data_count_width = 6 ")
       (comment "c_preload_regs = 1 ")
       (comment "c_dout_rst_val = 0 ")
       (comment "c_has_data_count = 1 ")
       (comment "c_prog_full_thresh_negate_val = 28 ")
       (comment "c_wr_depth = 32 ")
       (comment "c_prog_empty_thresh_negate_val = 5 ")
       (comment "c_prog_empty_thresh_assert_val = 4 ")
       (comment "c_has_valid = 0 ")
       (comment "c_init_wr_pntr_val = 0 ")
       (comment "c_prog_full_thresh_assert_val = 29 ")
       (comment "c_use_fifo16_flags = 0 ")
       (comment "c_has_backup = 0 ")
       (comment "c_valid_low = 0 ")
       (comment "c_prim_fifo_type = 512x36 ")
       (comment "c_count_type = 0 ")
       (comment "c_prog_full_type = 1 ")
       (comment "c_memory_type = 2 ")
   (external xilinxun (edifLevel 0)
      (technology (numberDefinition))
       (cell VCC (cellType GENERIC)
           (view view_1 (viewType NETLIST)
               (interface
                   (port P (direction OUTPUT))
               )
           )
       )
       (cell GND (cellType GENERIC)
           (view view_1 (viewType NETLIST)
               (interface
                   (port G (direction OUTPUT))
               )
           )
       )
   )
   (external system_soft_temac_wrapper_fifo_generator_v6_1_fifo_generator_v6_1_xst_1_lib (edifLevel 0)
       (technology (numberDefinition))
       (cell system_soft_temac_wrapper_fifo_generator_v6_1_fifo_generator_v6_1_xst_1 (cellType GENERIC)
           (view view_1 (viewType NETLIST)
               (interface
                   (port clk (direction INPUT))
                   (port backup (direction INPUT))
                   (port backup_marker (direction INPUT))
                   (port ( array ( rename din "din<35:0>") 36 ) (direction INPUT))
                   (port ( array ( rename prog_empty_thresh "prog_empty_thresh<4:0>") 5 ) (direction INPUT))
                   (port ( array ( rename prog_empty_thresh_assert "prog_empty_thresh_assert<4:0>") 5 ) (direction INPUT))
                   (port ( array ( rename prog_empty_thresh_negate "prog_empty_thresh_negate<4:0>") 5 ) (direction INPUT))
                   (port ( array ( rename prog_full_thresh "prog_full_thresh<4:0>") 5 ) (direction INPUT))
                   (port ( array ( rename prog_full_thresh_assert "prog_full_thresh_assert<4:0>") 5 ) (direction INPUT))
                   (port ( array ( rename prog_full_thresh_negate "prog_full_thresh_negate<4:0>") 5 ) (direction INPUT))
                   (port rd_clk (direction INPUT))
                   (port rd_en (direction INPUT))
                   (port rd_rst (direction INPUT))
                   (port rst (direction INPUT))
                   (port srst (direction INPUT))
                   (port int_clk (direction INPUT))
                   (port wr_clk (direction INPUT))
                   (port wr_en (direction INPUT))
                   (port wr_rst (direction INPUT))
                   (port injectdbiterr (direction INPUT))
                   (port injectsbiterr (direction INPUT))
                   (port almost_empty (direction OUTPUT))
                   (port almost_full (direction OUTPUT))
                   (port ( array ( rename data_count "data_count<5:0>") 6 ) (direction OUTPUT))
                   (port ( array ( rename dout "dout<35:0>") 36 ) (direction OUTPUT))
                   (port empty (direction OUTPUT))
                   (port full (direction OUTPUT))
                   (port overflow (direction OUTPUT))
                   (port prog_empty (direction OUTPUT))
                   (port prog_full (direction OUTPUT))
                   (port valid (direction OUTPUT))
                   (port ( array ( rename rd_data_count "rd_data_count<5:0>") 6 ) (direction OUTPUT))
                   (port underflow (direction OUTPUT))
                   (port wr_ack (direction OUTPUT))
                   (port ( array ( rename wr_data_count "wr_data_count<5:0>") 6 ) (direction OUTPUT))
                   (port sbiterr (direction OUTPUT))
                   (port dbiterr (direction OUTPUT))
               )
           )
       )
   )
(library test_lib (edifLevel 0) (technology (numberDefinition (scale 1 (E 1 -12) (unit Time))))
(cell system_soft_temac_wrapper_fifo_generator_v6_1
 (cellType GENERIC) (view view_1 (viewType NETLIST)
  (interface
   (port ( rename backup "backup") (direction INPUT))
   (port ( rename backup_marker "backup_marker") (direction INPUT))
   (port ( rename clk "clk") (direction INPUT))
   (port ( rename rst "rst") (direction INPUT))
   (port ( rename srst "srst") (direction INPUT))
   (port ( rename wr_clk "wr_clk") (direction INPUT))
   (port ( rename wr_rst "wr_rst") (direction INPUT))
   (port ( rename rd_clk "rd_clk") (direction INPUT))
   (port ( rename rd_rst "rd_rst") (direction INPUT))
   (port ( rename din_35_ "din<35>") (direction INPUT))
   (port ( rename din_34_ "din<34>") (direction INPUT))
   (port ( rename din_33_ "din<33>") (direction INPUT))
   (port ( rename din_32_ "din<32>") (direction INPUT))
   (port ( rename din_31_ "din<31>") (direction INPUT))
   (port ( rename din_30_ "din<30>") (direction INPUT))
   (port ( rename din_29_ "din<29>") (direction INPUT))
   (port ( rename din_28_ "din<28>") (direction INPUT))
   (port ( rename din_27_ "din<27>") (direction INPUT))
   (port ( rename din_26_ "din<26>") (direction INPUT))
   (port ( rename din_25_ "din<25>") (direction INPUT))
   (port ( rename din_24_ "din<24>") (direction INPUT))
   (port ( rename din_23_ "din<23>") (direction INPUT))
   (port ( rename din_22_ "din<22>") (direction INPUT))
   (port ( rename din_21_ "din<21>") (direction INPUT))
   (port ( rename din_20_ "din<20>") (direction INPUT))
   (port ( rename din_19_ "din<19>") (direction INPUT))
   (port ( rename din_18_ "din<18>") (direction INPUT))
   (port ( rename din_17_ "din<17>") (direction INPUT))
   (port ( rename din_16_ "din<16>") (direction INPUT))
   (port ( rename din_15_ "din<15>") (direction INPUT))
   (port ( rename din_14_ "din<14>") (direction INPUT))
   (port ( rename din_13_ "din<13>") (direction INPUT))
   (port ( rename din_12_ "din<12>") (direction INPUT))
   (port ( rename din_11_ "din<11>") (direction INPUT))
   (port ( rename din_10_ "din<10>") (direction INPUT))
   (port ( rename din_9_ "din<9>") (direction INPUT))
   (port ( rename din_8_ "din<8>") (direction INPUT))
   (port ( rename din_7_ "din<7>") (direction INPUT))
   (port ( rename din_6_ "din<6>") (direction INPUT))
   (port ( rename din_5_ "din<5>") (direction INPUT))
   (port ( rename din_4_ "din<4>") (direction INPUT))
   (port ( rename din_3_ "din<3>") (direction INPUT))
   (port ( rename din_2_ "din<2>") (direction INPUT))
   (port ( rename din_1_ "din<1>") (direction INPUT))
   (port ( rename din_0_ "din<0>") (direction INPUT))
   (port ( rename wr_en "wr_en") (direction INPUT))
   (port ( rename rd_en "rd_en") (direction INPUT))
   (port ( rename prog_empty_thresh_4_ "prog_empty_thresh<4>") (direction INPUT))
   (port ( rename prog_empty_thresh_3_ "prog_empty_thresh<3>") (direction INPUT))
   (port ( rename prog_empty_thresh_2_ "prog_empty_thresh<2>") (direction INPUT))
   (port ( rename prog_empty_thresh_1_ "prog_empty_thresh<1>") (direction INPUT))
   (port ( rename prog_empty_thresh_0_ "prog_empty_thresh<0>") (direction INPUT))
   (port ( rename prog_empty_thresh_assert_4_ "prog_empty_thresh_assert<4>") (direction INPUT))
   (port ( rename prog_empty_thresh_assert_3_ "prog_empty_thresh_assert<3>") (direction INPUT))
   (port ( rename prog_empty_thresh_assert_2_ "prog_empty_thresh_assert<2>") (direction INPUT))
   (port ( rename prog_empty_thresh_assert_1_ "prog_empty_thresh_assert<1>") (direction INPUT))
   (port ( rename prog_empty_thresh_assert_0_ "prog_empty_thresh_assert<0>") (direction INPUT))
   (port ( rename prog_empty_thresh_negate_4_ "prog_empty_thresh_negate<4>") (direction INPUT))
   (port ( rename prog_empty_thresh_negate_3_ "prog_empty_thresh_negate<3>") (direction INPUT))
   (port ( rename prog_empty_thresh_negate_2_ "prog_empty_thresh_negate<2>") (direction INPUT))
   (port ( rename prog_empty_thresh_negate_1_ "prog_empty_thresh_negate<1>") (direction INPUT))
   (port ( rename prog_empty_thresh_negate_0_ "prog_empty_thresh_negate<0>") (direction INPUT))
   (port ( rename prog_full_thresh_4_ "prog_full_thresh<4>") (direction INPUT))
   (port ( rename prog_full_thresh_3_ "prog_full_thresh<3>") (direction INPUT))
   (port ( rename prog_full_thresh_2_ "prog_full_thresh<2>") (direction INPUT))
   (port ( rename prog_full_thresh_1_ "prog_full_thresh<1>") (direction INPUT))
   (port ( rename prog_full_thresh_0_ "prog_full_thresh<0>") (direction INPUT))
   (port ( rename prog_full_thresh_assert_4_ "prog_full_thresh_assert<4>") (direction INPUT))
   (port ( rename prog_full_thresh_assert_3_ "prog_full_thresh_assert<3>") (direction INPUT))
   (port ( rename prog_full_thresh_assert_2_ "prog_full_thresh_assert<2>") (direction INPUT))
   (port ( rename prog_full_thresh_assert_1_ "prog_full_thresh_assert<1>") (direction INPUT))
   (port ( rename prog_full_thresh_assert_0_ "prog_full_thresh_assert<0>") (direction INPUT))
   (port ( rename prog_full_thresh_negate_4_ "prog_full_thresh_negate<4>") (direction INPUT))
   (port ( rename prog_full_thresh_negate_3_ "prog_full_thresh_negate<3>") (direction INPUT))
   (port ( rename prog_full_thresh_negate_2_ "prog_full_thresh_negate<2>") (direction INPUT))
   (port ( rename prog_full_thresh_negate_1_ "prog_full_thresh_negate<1>") (direction INPUT))
   (port ( rename prog_full_thresh_negate_0_ "prog_full_thresh_negate<0>") (direction INPUT))
   (port ( rename int_clk "int_clk") (direction INPUT))
   (port ( rename injectdbiterr "injectdbiterr") (direction INPUT))
   (port ( rename injectsbiterr "injectsbiterr") (direction INPUT))
   (port ( rename dout_35_ "dout<35>") (direction OUTPUT))
   (port ( rename dout_34_ "dout<34>") (direction OUTPUT))
   (port ( rename dout_33_ "dout<33>") (direction OUTPUT))
   (port ( rename dout_32_ "dout<32>") (direction OUTPUT))
   (port ( rename dout_31_ "dout<31>") (direction OUTPUT))
   (port ( rename dout_30_ "dout<30>") (direction OUTPUT))
   (port ( rename dout_29_ "dout<29>") (direction OUTPUT))
   (port ( rename dout_28_ "dout<28>") (direction OUTPUT))
   (port ( rename dout_27_ "dout<27>") (direction OUTPUT))
   (port ( rename dout_26_ "dout<26>") (direction OUTPUT))
   (port ( rename dout_25_ "dout<25>") (direction OUTPUT))
   (port ( rename dout_24_ "dout<24>") (direction OUTPUT))
   (port ( rename dout_23_ "dout<23>") (direction OUTPUT))
   (port ( rename dout_22_ "dout<22>") (direction OUTPUT))
   (port ( rename dout_21_ "dout<21>") (direction OUTPUT))
   (port ( rename dout_20_ "dout<20>") (direction OUTPUT))
   (port ( rename dout_19_ "dout<19>") (direction OUTPUT))
   (port ( rename dout_18_ "dout<18>") (direction OUTPUT))
   (port ( rename dout_17_ "dout<17>") (direction OUTPUT))
   (port ( rename dout_16_ "dout<16>") (direction OUTPUT))
   (port ( rename dout_15_ "dout<15>") (direction OUTPUT))
   (port ( rename dout_14_ "dout<14>") (direction OUTPUT))
   (port ( rename dout_13_ "dout<13>") (direction OUTPUT))
   (port ( rename dout_12_ "dout<12>") (direction OUTPUT))
   (port ( rename dout_11_ "dout<11>") (direction OUTPUT))
   (port ( rename dout_10_ "dout<10>") (direction OUTPUT))
   (port ( rename dout_9_ "dout<9>") (direction OUTPUT))
   (port ( rename dout_8_ "dout<8>") (direction OUTPUT))
   (port ( rename dout_7_ "dout<7>") (direction OUTPUT))
   (port ( rename dout_6_ "dout<6>") (direction OUTPUT))
   (port ( rename dout_5_ "dout<5>") (direction OUTPUT))
   (port ( rename dout_4_ "dout<4>") (direction OUTPUT))
   (port ( rename dout_3_ "dout<3>") (direction OUTPUT))
   (port ( rename dout_2_ "dout<2>") (direction OUTPUT))
   (port ( rename dout_1_ "dout<1>") (direction OUTPUT))
   (port ( rename dout_0_ "dout<0>") (direction OUTPUT))
   (port ( rename full "full") (direction OUTPUT))
   (port ( rename almost_full "almost_full") (direction OUTPUT))
   (port ( rename wr_ack "wr_ack") (direction OUTPUT))
   (port ( rename overflow "overflow") (direction OUTPUT))
   (port ( rename empty "empty") (direction OUTPUT))
   (port ( rename almost_empty "almost_empty") (direction OUTPUT))
   (port ( rename valid "valid") (direction OUTPUT))
   (port ( rename underflow "underflow") (direction OUTPUT))
   (port ( rename data_count_5_ "data_count<5>") (direction OUTPUT))
   (port ( rename data_count_4_ "data_count<4>") (direction OUTPUT))
   (port ( rename data_count_3_ "data_count<3>") (direction OUTPUT))
   (port ( rename data_count_2_ "data_count<2>") (direction OUTPUT))
   (port ( rename data_count_1_ "data_count<1>") (direction OUTPUT))
   (port ( rename data_count_0_ "data_count<0>") (direction OUTPUT))
   (port ( rename rd_data_count_5_ "rd_data_count<5>") (direction OUTPUT))
   (port ( rename rd_data_count_4_ "rd_data_count<4>") (direction OUTPUT))
   (port ( rename rd_data_count_3_ "rd_data_count<3>") (direction OUTPUT))
   (port ( rename rd_data_count_2_ "rd_data_count<2>") (direction OUTPUT))
   (port ( rename rd_data_count_1_ "rd_data_count<1>") (direction OUTPUT))
   (port ( rename rd_data_count_0_ "rd_data_count<0>") (direction OUTPUT))
   (port ( rename wr_data_count_5_ "wr_data_count<5>") (direction OUTPUT))
   (port ( rename wr_data_count_4_ "wr_data_count<4>") (direction OUTPUT))
   (port ( rename wr_data_count_3_ "wr_data_count<3>") (direction OUTPUT))
   (port ( rename wr_data_count_2_ "wr_data_count<2>") (direction OUTPUT))
   (port ( rename wr_data_count_1_ "wr_data_count<1>") (direction OUTPUT))
   (port ( rename wr_data_count_0_ "wr_data_count<0>") (direction OUTPUT))
   (port ( rename prog_full "prog_full") (direction OUTPUT))
   (port ( rename prog_empty "prog_empty") (direction OUTPUT))
   (port ( rename sbiterr "sbiterr") (direction OUTPUT))
   (port ( rename dbiterr "dbiterr") (direction OUTPUT))
   )
  (contents
   (instance VCC (viewRef view_1 (cellRef VCC  (libraryRef xilinxun))))
   (instance GND (viewRef view_1 (cellRef GND  (libraryRef xilinxun))))
   (instance BU3
      (viewRef view_1 (cellRef system_soft_temac_wrapper_fifo_generator_v6_1_fifo_generator_v6_1_xst_1 (libraryRef system_soft_temac_wrapper_fifo_generator_v6_1_fifo_generator_v6_1_xst_1_lib)))
   )
   (net (rename N4 "clk")
    (joined
      (portRef clk)
      (portRef clk (instanceRef BU3))
    )
   )
   (net (rename N6 "srst")
    (joined
      (portRef srst)
      (portRef srst (instanceRef BU3))
    )
   )
   (net (rename N11 "din<35>")
    (joined
      (portRef din_35_)
      (portRef (member din 0) (instanceRef BU3))
    )
   )
   (net (rename N12 "din<34>")
    (joined
      (portRef din_34_)
      (portRef (member din 1) (instanceRef BU3))
    )
   )
   (net (rename N13 "din<33>")
    (joined
      (portRef din_33_)
      (portRef (member din 2) (instanceRef BU3))
    )
   )
   (net (rename N14 "din<32>")
    (joined
      (portRef din_32_)
      (portRef (member din 3) (instanceRef BU3))
    )
   )
   (net (rename N15 "din<31>")
    (joined
      (portRef din_31_)
      (portRef (member din 4) (instanceRef BU3))
    )
   )
   (net (rename N16 "din<30>")
    (joined
      (portRef din_30_)
      (portRef (member din 5) (instanceRef BU3))
    )
   )
   (net (rename N17 "din<29>")
    (joined
      (portRef din_29_)
      (portRef (member din 6) (instanceRef BU3))
    )
   )
   (net (rename N18 "din<28>")
    (joined
      (portRef din_28_)
      (portRef (member din 7) (instanceRef BU3))
    )
   )
   (net (rename N19 "din<27>")
    (joined
      (portRef din_27_)
      (portRef (member din 8) (instanceRef BU3))
    )
   )
   (net (rename N20 "din<26>")
    (joined
      (portRef din_26_)
      (portRef (member din 9) (instanceRef BU3))
    )
   )
   (net (rename N21 "din<25>")
    (joined
      (portRef din_25_)
      (portRef (member din 10) (instanceRef BU3))
    )
   )
   (net (rename N22 "din<24>")
    (joined
      (portRef din_24_)
      (portRef (member din 11) (instanceRef BU3))
    )
   )
   (net (rename N23 "din<23>")
    (joined
      (portRef din_23_)
      (portRef (member din 12) (instanceRef BU3))
    )
   )
   (net (rename N24 "din<22>")
    (joined
      (portRef din_22_)
      (portRef (member din 13) (instanceRef BU3))
    )
   )
   (net (rename N25 "din<21>")
    (joined
      (portRef din_21_)
      (portRef (member din 14) (instanceRef BU3))
    )
   )
   (net (rename N26 "din<20>")
    (joined
      (portRef din_20_)
      (portRef (member din 15) (instanceRef BU3))
    )
   )
   (net (rename N27 "din<19>")
    (joined
      (portRef din_19_)
      (portRef (member din 16) (instanceRef BU3))
    )
   )
   (net (rename N28 "din<18>")
    (joined
      (portRef din_18_)
      (portRef (member din 17) (instanceRef BU3))
    )
   )
   (net (rename N29 "din<17>")
    (joined
      (portRef din_17_)
      (portRef (member din 18) (instanceRef BU3))
    )
   )
   (net (rename N30 "din<16>")
    (joined
      (portRef din_16_)
      (portRef (member din 19) (instanceRef BU3))
    )
   )
   (net (rename N31 "din<15>")
    (joined
      (portRef din_15_)
      (portRef (member din 20) (instanceRef BU3))
    )
   )
   (net (rename N32 "din<14>")
    (joined
      (portRef din_14_)
      (portRef (member din 21) (instanceRef BU3))
    )
   )
   (net (rename N33 "din<13>")
    (joined
      (portRef din_13_)
      (portRef (member din 22) (instanceRef BU3))
    )
   )
   (net (rename N34 "din<12>")
    (joined
      (portRef din_12_)
      (portRef (member din 23) (instanceRef BU3))
    )
   )
   (net (rename N35 "din<11>")
    (joined
      (portRef din_11_)
      (portRef (member din 24) (instanceRef BU3))
    )
   )
   (net (rename N36 "din<10>")
    (joined
      (portRef din_10_)
      (portRef (member din 25) (instanceRef BU3))
    )
   )
   (net (rename N37 "din<9>")
    (joined
      (portRef din_9_)
      (portRef (member din 26) (instanceRef BU3))
    )
   )
   (net (rename N38 "din<8>")
    (joined
      (portRef din_8_)
      (portRef (member din 27) (instanceRef BU3))
    )
   )
   (net (rename N39 "din<7>")
    (joined
      (portRef din_7_)
      (portRef (member din 28) (instanceRef BU3))
    )
   )
   (net (rename N40 "din<6>")
    (joined
      (portRef din_6_)
      (portRef (member din 29) (instanceRef BU3))
    )
   )
   (net (rename N41 "din<5>")
    (joined
      (portRef din_5_)
      (portRef (member din 30) (instanceRef BU3))
    )
   )
   (net (rename N42 "din<4>")
    (joined
      (portRef din_4_)
      (portRef (member din 31) (instanceRef BU3))
    )
   )
   (net (rename N43 "din<3>")
    (joined
      (portRef din_3_)
      (portRef (member din 32) (instanceRef BU3))
    )
   )
   (net (rename N44 "din<2>")
    (joined
      (portRef din_2_)
      (portRef (member din 33) (instanceRef BU3))
    )
   )
   (net (rename N45 "din<1>")
    (joined
      (portRef din_1_)
      (portRef (member din 34) (instanceRef BU3))
    )
   )
   (net (rename N46 "din<0>")
    (joined
      (portRef din_0_)
      (portRef (member din 35) (instanceRef BU3))
    )
   )
   (net (rename N47 "wr_en")
    (joined
      (portRef wr_en)
      (portRef wr_en (instanceRef BU3))
    )
   )
   (net (rename N48 "rd_en")
    (joined
      (portRef rd_en)
      (portRef rd_en (instanceRef BU3))
    )
   )
   (net (rename N82 "dout<35>")
    (joined
      (portRef dout_35_)
      (portRef (member dout 0) (instanceRef BU3))
    )
   )
   (net (rename N83 "dout<34>")
    (joined
      (portRef dout_34_)
      (portRef (member dout 1) (instanceRef BU3))
    )
   )
   (net (rename N84 "dout<33>")
    (joined
      (portRef dout_33_)
      (portRef (member dout 2) (instanceRef BU3))
    )
   )
   (net (rename N85 "dout<32>")
    (joined
      (portRef dout_32_)
      (portRef (member dout 3) (instanceRef BU3))
    )
   )
   (net (rename N86 "dout<31>")
    (joined
      (portRef dout_31_)
      (portRef (member dout 4) (instanceRef BU3))
    )
   )
   (net (rename N87 "dout<30>")
    (joined
      (portRef dout_30_)
      (portRef (member dout 5) (instanceRef BU3))
    )
   )
   (net (rename N88 "dout<29>")
    (joined
      (portRef dout_29_)
      (portRef (member dout 6) (instanceRef BU3))
    )
   )
   (net (rename N89 "dout<28>")
    (joined
      (portRef dout_28_)
      (portRef (member dout 7) (instanceRef BU3))
    )
   )
   (net (rename N90 "dout<27>")
    (joined
      (portRef dout_27_)
      (portRef (member dout 8) (instanceRef BU3))
    )
   )
   (net (rename N91 "dout<26>")
    (joined
      (portRef dout_26_)
      (portRef (member dout 9) (instanceRef BU3))
    )
   )
   (net (rename N92 "dout<25>")
    (joined
      (portRef dout_25_)
      (portRef (member dout 10) (instanceRef BU3))
    )
   )
   (net (rename N93 "dout<24>")
    (joined
      (portRef dout_24_)
      (portRef (member dout 11) (instanceRef BU3))
    )
   )
   (net (rename N94 "dout<23>")
    (joined
      (portRef dout_23_)
      (portRef (member dout 12) (instanceRef BU3))
    )
   )
   (net (rename N95 "dout<22>")
    (joined
      (portRef dout_22_)
      (portRef (member dout 13) (instanceRef BU3))
    )
   )
   (net (rename N96 "dout<21>")
    (joined
      (portRef dout_21_)
      (portRef (member dout 14) (instanceRef BU3))
    )
   )
   (net (rename N97 "dout<20>")
    (joined
      (portRef dout_20_)
      (portRef (member dout 15) (instanceRef BU3))
    )
   )
   (net (rename N98 "dout<19>")
    (joined
      (portRef dout_19_)
      (portRef (member dout 16) (instanceRef BU3))
    )
   )
   (net (rename N99 "dout<18>")
    (joined
      (portRef dout_18_)
      (portRef (member dout 17) (instanceRef BU3))
    )
   )
   (net (rename N100 "dout<17>")
    (joined
      (portRef dout_17_)
      (portRef (member dout 18) (instanceRef BU3))
    )
   )
   (net (rename N101 "dout<16>")
    (joined
      (portRef dout_16_)
      (portRef (member dout 19) (instanceRef BU3))
    )
   )
   (net (rename N102 "dout<15>")
    (joined
      (portRef dout_15_)
      (portRef (member dout 20) (instanceRef BU3))
    )
   )
   (net (rename N103 "dout<14>")
    (joined
      (portRef dout_14_)
      (portRef (member dout 21) (instanceRef BU3))
    )
   )
   (net (rename N104 "dout<13>")
    (joined
      (portRef dout_13_)
      (portRef (member dout 22) (instanceRef BU3))
    )
   )
   (net (rename N105 "dout<12>")
    (joined
      (portRef dout_12_)
      (portRef (member dout 23) (instanceRef BU3))
    )
   )
   (net (rename N106 "dout<11>")
    (joined
      (portRef dout_11_)
      (portRef (member dout 24) (instanceRef BU3))
    )
   )
   (net (rename N107 "dout<10>")
    (joined
      (portRef dout_10_)
      (portRef (member dout 25) (instanceRef BU3))
    )
   )
   (net (rename N108 "dout<9>")
    (joined
      (portRef dout_9_)
      (portRef (member dout 26) (instanceRef BU3))
    )
   )
   (net (rename N109 "dout<8>")
    (joined
      (portRef dout_8_)
      (portRef (member dout 27) (instanceRef BU3))
    )
   )
   (net (rename N110 "dout<7>")
    (joined
      (portRef dout_7_)
      (portRef (member dout 28) (instanceRef BU3))
    )
   )
   (net (rename N111 "dout<6>")
    (joined
      (portRef dout_6_)
      (portRef (member dout 29) (instanceRef BU3))
    )
   )
   (net (rename N112 "dout<5>")
    (joined
      (portRef dout_5_)
      (portRef (member dout 30) (instanceRef BU3))
    )
   )
   (net (rename N113 "dout<4>")
    (joined
      (portRef dout_4_)
      (portRef (member dout 31) (instanceRef BU3))
    )
   )
   (net (rename N114 "dout<3>")
    (joined
      (portRef dout_3_)
      (portRef (member dout 32) (instanceRef BU3))
    )
   )
   (net (rename N115 "dout<2>")
    (joined
      (portRef dout_2_)
      (portRef (member dout 33) (instanceRef BU3))
    )
   )
   (net (rename N116 "dout<1>")
    (joined
      (portRef dout_1_)
      (portRef (member dout 34) (instanceRef BU3))
    )
   )
   (net (rename N117 "dout<0>")
    (joined
      (portRef dout_0_)
      (portRef (member dout 35) (instanceRef BU3))
    )
   )
   (net (rename N118 "full")
    (joined
      (portRef full)
      (portRef full (instanceRef BU3))
    )
   )
   (net (rename N119 "almost_full")
    (joined
      (portRef almost_full)
      (portRef almost_full (instanceRef BU3))
    )
   )
   (net (rename N122 "empty")
    (joined
      (portRef empty)
      (portRef empty (instanceRef BU3))
    )
   )
   (net (rename N126 "data_count<5>")
    (joined
      (portRef data_count_5_)
      (portRef (member data_count 0) (instanceRef BU3))
    )
   )
   (net (rename N127 "data_count<4>")
    (joined
      (portRef data_count_4_)
      (portRef (member data_count 1) (instanceRef BU3))
    )
   )
   (net (rename N128 "data_count<3>")
    (joined
      (portRef data_count_3_)
      (portRef (member data_count 2) (instanceRef BU3))
    )
   )
   (net (rename N129 "data_count<2>")
    (joined
      (portRef data_count_2_)
      (portRef (member data_count 3) (instanceRef BU3))
    )
   )
   (net (rename N130 "data_count<1>")
    (joined
      (portRef data_count_1_)
      (portRef (member data_count 4) (instanceRef BU3))
    )
   )
   (net (rename N131 "data_count<0>")
    (joined
      (portRef data_count_0_)
      (portRef (member data_count 5) (instanceRef BU3))
    )
   )
   (net (rename N144 "prog_full")
    (joined
      (portRef prog_full)
      (portRef prog_full (instanceRef BU3))
    )
   )
))))
(design system_soft_temac_wrapper_fifo_generator_v6_1 (cellRef system_soft_temac_wrapper_fifo_generator_v6_1 (libraryRef test_lib))
  (property X_CORE_INFO (string "null"))
  (property PART (string "XC6SLX4-3-tqg144") (owner "Xilinx"))
))
